const KEYMAP = new Map<string, [string | number,string | number,string | number,string | number,]>();
KEYMAP.set("space", [" ", " ", 0, 0]);
KEYMAP.set("apostrophe", [";", ":", 0, 0]);
KEYMAP.set("comma", [",", "<", 0, 0]);
KEYMAP.set("minus", ["-", "_", 0, 0]);
KEYMAP.set("period", [".", ">", 0, 0]);
KEYMAP.set("slash", ["/", "?", 0, 0]);
KEYMAP.set("zero", ["0", ")", 0, 0]);
KEYMAP.set("one", ["1", "!", 0, 0]);
KEYMAP.set("two", ["2", '"', 0, 0]);
KEYMAP.set("three", ["3", "Â£", 0, 0]);
KEYMAP.set("four", ["4", "$", 0, 0]);
KEYMAP.set("five", ["5", "%", 0, 0]);
KEYMAP.set("six", ["6", "^", 0, 0]);
KEYMAP.set("seven", ["7", "&", 0, 0]);
KEYMAP.set("eight", ["8", "*", 0, 0]);
KEYMAP.set("nine", ["9", "(", 0, 0]);
KEYMAP.set("semicolon", [";", ":", 0, 0]);
KEYMAP.set("equals", ["=", "+", 0, 0]);
KEYMAP.set("a", ["a", "A", "\x01", 0]);
KEYMAP.set("b", ["b", "B", "\x02", 0]);
KEYMAP.set("c", ["c", "C", "\x03", 0]);
KEYMAP.set("d", ["d", "D", "\x04", 0]);
KEYMAP.set("e", ["e", "E", "\x05", 0]);
KEYMAP.set("f", ["f", "F", "\x06", 0]);
KEYMAP.set("g", ["g", "G", "\x07", 0]);
KEYMAP.set("h", ["h", "H", "\x08", 0]);
KEYMAP.set("i", ["i", "I", "\x09", 0]);
KEYMAP.set("j", ["j", "J", "\x0A", 0]);
KEYMAP.set("k", ["k", "K", "\x0B", 0]);
KEYMAP.set("l", ["l", "L", "\x0C", 0]);
KEYMAP.set("m", ["m", "M", "\x0D", 0]);
KEYMAP.set("n", ["n", "N", "\x0E", 0]);
KEYMAP.set("o", ["o", "O", "\x0F", 0]);
KEYMAP.set("p", ["p", "P", "\x10", 0]);
KEYMAP.set("q", ["q", "Q", "\x11", 0]);
KEYMAP.set("r", ["r", "R", "\x12", 0]);
KEYMAP.set("s", ["s", "S", "\x13", 0]);
KEYMAP.set("t", ["t", "T", "\x14", 0]);
KEYMAP.set("u", ["u", "U", "\x15", 0]);
KEYMAP.set("v", ["v", "V", "\x16", 0]);
KEYMAP.set("w", ["w", "W", "\x17", 0]);
KEYMAP.set("x", ["x", "X", "\x18", 0]);
KEYMAP.set("y", ["y", "Y", "\x19", 0]);
KEYMAP.set("z", ["z", "Z", "\x1A", 0]);
KEYMAP.set("leftBracket", ["[", 0, 0, 0]);
KEYMAP.set("backslash", ["\\", "|", 0, 0]);
KEYMAP.set("rightBracket", ["]", 0, 0, 0]);
KEYMAP.set("grave", ["`", 0, 0, 0]);
KEYMAP.set("world1", [0, 0, 0, 0]);
KEYMAP.set("world2", [0, 0, 0, 0]);
KEYMAP.set("enter", ["\r", 0, 0, 0]);
KEYMAP.set("tab", ["\t", 0, 0, 0]);
KEYMAP.set("backspace", ["\b", 0, 0, 0]);
KEYMAP.set("insert", [0, 0, 0, 0]);
KEYMAP.set("delete", [0, 0, 0, 0]);
KEYMAP.set("right", ["\x1b[C", 0, 0, 0]);
KEYMAP.set("left", ["\x1b[D", 0, 0, 0]);
KEYMAP.set("down", ["\x1b[B", 0, 0, 0]);
KEYMAP.set("up", ["\x1b[A", 0, 0, 0]);
KEYMAP.set("pageUp", [0, 0, 0, 0]);
KEYMAP.set("pageDown", [0, 0, 0, 0]);
KEYMAP.set("home", [0, 0, 0, 0]);
KEYMAP.set("end", [0, 0, 0, 0]);
KEYMAP.set("capsLock", [0, 0, 0, 0]);
KEYMAP.set("scrollLock", [0, 0, 0, 0]);
KEYMAP.set("numLock", [0, 0, 0, 0]);
KEYMAP.set("printScreen", [0, 0, 0, 0]);
KEYMAP.set("pause", [0, 0, 0, 0]);
KEYMAP.set("f1", [0, 0, 0, 0]);
KEYMAP.set("f2", [0, 0, 0, 0]);
KEYMAP.set("f3", [0, 0, 0, 0]);
KEYMAP.set("f4", [0, 0, 0, 0]);
KEYMAP.set("f5", [0, 0, 0, 0]);
KEYMAP.set("f6", [0, 0, 0, 0]);
KEYMAP.set("f7", [0, 0, 0, 0]);
KEYMAP.set("f8", [0, 0, 0, 0]);
KEYMAP.set("f9", [0, 0, 0, 0]);
KEYMAP.set("f10", [0, 0, 0, 0]);
KEYMAP.set("f11", [0, 0, 0, 0]);
KEYMAP.set("f12", [0, 0, 0, 0]);
KEYMAP.set("f13", [0, 0, 0, 0]);
KEYMAP.set("f14", [0, 0, 0, 0]);
KEYMAP.set("f15", [0, 0, 0, 0]);
KEYMAP.set("f16", [0, 0, 0, 0]);
KEYMAP.set("f17", [0, 0, 0, 0]);
KEYMAP.set("f18", [0, 0, 0, 0]);
KEYMAP.set("f19", [0, 0, 0, 0]);
KEYMAP.set("f20", [0, 0, 0, 0]);
KEYMAP.set("f21", [0, 0, 0, 0]);
KEYMAP.set("f22", [0, 0, 0, 0]);
KEYMAP.set("f23", [0, 0, 0, 0]);
KEYMAP.set("f24", [0, 0, 0, 0]);
KEYMAP.set("f25", [0, 0, 0, 0]);
KEYMAP.set("numPad0", [0, 0, 0, 0]);
KEYMAP.set("numPad1", [0, 0, 0, 0]);
KEYMAP.set("numPad2", [0, 0, 0, 0]);
KEYMAP.set("numPad3", [0, 0, 0, 0]);
KEYMAP.set("numPad4", [0, 0, 0, 0]);
KEYMAP.set("numPad5", [0, 0, 0, 0]);
KEYMAP.set("numPad6", [0, 0, 0, 0]);
KEYMAP.set("numPad7", [0, 0, 0, 0]);
KEYMAP.set("numPad8", [0, 0, 0, 0]);
KEYMAP.set("numPad9", [0, 0, 0, 0]);
KEYMAP.set("numPadDecimal", [0, 0, 0, 0]);
KEYMAP.set("numPadDivide", [0, 0, 0, 0]);
KEYMAP.set("numPadMultiply", [0, 0, 0, 0]);
KEYMAP.set("numPadSubtract", [0, 0, 0, 0]);
KEYMAP.set("numPadAdd", [0, 0, 0, 0]);
KEYMAP.set("numPadEnter", [0, 0, 0, 0]);
KEYMAP.set("numPadEqual", [0, 0, 0, 0]);
KEYMAP.set("leftShift", [0, 0, 0, 0]);
KEYMAP.set("leftCtrl", [0, 0, 0, 0]);
KEYMAP.set("leftAlt", [0, 0, 0, 0]);
KEYMAP.set("leftSuper", [0, 0, 0, 0]);
KEYMAP.set("rightShift", [0, 0, 0, 0]);
KEYMAP.set("rightCtrl", [0, 0, 0, 0]);
KEYMAP.set("rightAlt", ["\x1b ", 0, 0, 0]);
KEYMAP.set("rightSuper", [0, 0, 0, 0]);
KEYMAP.set("menu", [0, 0, 0, 0]);

const getCharacter = (keyName: string, shift: boolean, ctrl: boolean) => {
  let lookupIndex = 0;
  if (shift) lookupIndex += 1;
  if (ctrl) lookupIndex += 2;

  const foundKey = KEYMAP.get(keyName);
  if (typeof foundKey !== "undefined") {
    const foundCharacter = foundKey[lookupIndex];
    if (typeof foundCharacter === "string") {
      return foundCharacter;
    }
  }
  return null;
};

export { getCharacter };
